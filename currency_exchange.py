# -*- coding: utf-8 -*-
"""currency exchange.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1567RIUnUTjgX3uOtPa5zT0obT79ZN6Zm
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from seaborn import regression
sns.set()
plt.style.use('seaborn-whitegrid')

data = pd.read_csv("/content/download.csv.csv")
print(data.head())

plt.figure(figsize=(10, 4))
plt.title("INR - USD Exchange Rate")
plt.xlabel("Date")
plt.ylabel("Close")
plt.plot(data["Close"])
plt.show()

print(data.corr(numeric_only=True)) # Add numeric_only=True to only include numeric columns for correlation calculation
sns.heatmap(data.corr(numeric_only=True))
plt.show()

x = data[["Open", "High", "Low"]]
y = data["Close"]
x = x.to_numpy()
y = y.to_numpy()
y = y.reshape(-1, 1)

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.impute import SimpleImputer # Import the SimpleImputer class

# ... your existing code for data loading and preprocessing ...

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

# Create an imputer to fill NaN values with the mean
imputer = SimpleImputer(strategy='mean')

# Fit and transform the imputer on the training data
X_train = imputer.fit_transform(X_train)

# Transform the test data using the same imputer
X_test = imputer.transform(X_test)

# Fit and transform the imputer on the training data for y_train
y_train = imputer.fit_transform(y_train)

# Transform the test data using the same imputer for y_test
y_test = imputer.transform(y_test)

# Create and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
ypred = model.predict(X_test)

# Now you can create your DataFrame
data = pd.DataFrame(data={"Predicted Rate": ypred.flatten()})
print(data.head())











